/**
 * User space driver API for sunwave's fingerprint device.
 * ATTENTION: Do NOT edit this file unless the corresponding driver changed.
 *
 * Copyright (C) 2016 Sunwave Corporation. <http://www.sunwavecorp.com>
 * Copyright (C) 2016 Langson Leung <mailto:liangzh@sunwavecorp.com>
 *
 * This program is free software; you can redistribute it and/or modify it 
 * under the terms of the GNU General Public License as published by the Free 
 * Software Foundation; either version 2 of the License, or (at your option) 
 * any later version.
 *
 * This program is distributed in the hope that it will be useful, 
 * but WITHOUT ANY WARRANTY; without even the implied warranty of 
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General 
 * Public License for more details.
**/
//#include "../../../spi/mediatek/mt6735/mt_spi.h"
//#include "../../../spi/mediatek/mt6735/mt_spi_hal.h"
#include <linux/spi/spi.h>
#include <linux/clk.h>
#include <mt_spi_hal.h>
#ifndef __SF_CTRL_API_H__
#define __SF_CTRL_API_H__

/* Device node. */
#define SF_CTL_DEV_NAME "/dev/sunwave_fp"

/* Max driver version buffer length. */
#define SF_DRV_VERSION_LEN 32

typedef enum {
    SF_KEY_NONE = 0,
    SF_KEY_HOME,
    SF_KEY_MENU,
    SF_KEY_BACK,
    SF_KEY_F11,
    SF_KEY_ENTER,
    SF_KEY_UP,
    SF_KEY_LEFT,
    SF_KEY_RIGHT,
    SF_KEY_DOWN,
    SF_KEY_WAKEUP,
} sf_key_type_t;

typedef struct {
    sf_key_type_t key;
    int value; /* for key type, 0 means up, 1 means down. */
} sf_key_event_t;
//void mt_spi_enable_clk(struct mt_spi_t *ms);
//#define SF_IOCTL_MAGIC 's' // 0x73
//#define SF_IOCTL_RESET_DEVICE      _IO (SF_IOCTL_MAGIC, 0x01)
//#define SF_IOCTL_REPORT_KEY_EVENT  _IOW(SF_IOCTL_MAGIC, 0x02, sf_key_event_t *)
//#define SF_IOCTL_GET_VERSION       _IOR(SF_IOCTL_MAGIC, 0x20, const char *)

//add sunwave.bruce.20170427
#define SF_IOC_MAGIC 's'
#define SF_IOC_INIT_DRIVER      _IO(SF_IOC_MAGIC, 0x00)
#define SF_IOC_DEINIT_DRIVER    _IO(SF_IOC_MAGIC, 0x01)
#define SF_IOC_RESET_DEVICE     _IO(SF_IOC_MAGIC, 0x02)
#define SF_IOC_ENABLE_IRQ       _IO(SF_IOC_MAGIC, 0x03)
#define SF_IOC_DISABLE_IRQ      _IO(SF_IOC_MAGIC, 0x04)
#define SF_IOC_ENABLE_SPI_CLK   _IO(SF_IOC_MAGIC, 0x05)
#define SF_IOC_DISABLE_SPI_CLK  _IO(SF_IOC_MAGIC, 0x06)
#define SF_IOC_ENABLE_POWER     _IO(SF_IOC_MAGIC, 0x07)
#define SF_IOC_DISABLE_POWER    _IO(SF_IOC_MAGIC, 0x08)
#define SF_IOC_REPORT_KEY_EVENT _IOW(SF_IOC_MAGIC, 0x09, sf_key_event_t *)
#define SF_IOC_SYNC_CONFIG      _IOWR(SF_IOC_MAGIC, 0x0a, void *)
#define SF_IOC_GET_VERSION      _IOR(SF_IOC_MAGIC, 0x20, const char *)
//end sunwave.bruce.20170427

/*//////////////////////////////////////////////////////////////////////////////
#define SF_IOCTL_WRITE      _IOW (SF_IOCTL_MAGIC, 0x0x, unsigned int)
#define SF_IOCTL_READ       _IOR (SF_IOCTL_MAGIC, 0x0y, unsigned int)
#define SF_IOCTL_WRITE_READ _IOWR(SF_IOCTL_MAGIC, 0x0z, unsigned int)
//////////////////////////////////////////////////////////////////////////////*/

#endif /* __SF_CTRL_API_H__ */

extern void hct_waite_for_finger_dts_paser(void);
extern int hct_finger_set_power(int cmd);
extern int hct_finger_set_18v_power(int cmd);
extern int hct_finger_set_reset(int cmd);
extern int hct_finger_set_spi_mode(int cmd);
extern int hct_finger_set_eint(int cmd);

